#! /bin/bash
# Sync current path to remote machine. Create path if not exist in remote.
# Usage: myrsync <hostname1/ip1> <hostname2/ip2> ...

until [ -z $1 ]; do
	case "$1" in
	-l|--login)    user="$2"; shift 2;;
	-p|--rpath)    rpath="$2";rpath_flag=1; shift 2;;
	-*) shift;;
	*) break;;
	esac
done

user=${user:-root}
lpaths="$(pwd)/"
hosts="$*"

if [[ -z $hosts && ! -e /tmp/myrsync.cfg ]];then
	echo "hosts in \$1 can't empty"
	exit 1
elif [[ ! -z $hosts ]]
then
	echo $hosts > /tmp/myrsync.cfg
else
	hosts=`cat /tmp/myrsync.cfg`
fi

cp_pub_key_to_remote()
{
	# awk get last not empty line
	pub_key=$(awk 'NF{s=$0}END{print s}' ~/.ssh/id_rsa.pub)

	cat <<-EOF | ssh $user@$host bash
	grep -q "${pub_key}" ~/.ssh/authorized_keys || {
		echo "${pub_key}" >> ~/.ssh/authorized_keys
	}
	EOF
}


for host in $hosts;do
	for lpath in $lpaths;do
		if [ "$rpath_flag" == "1" ];then
			rpath=$rpath/`basename $lpath`/
		else
			rpath=$lpath
		fi
		echo rpath= $rpath
		echo host= $host
		echo user= $user


		for t in {1..3};do
			#rsync --human-readable --progress -r -e 'ssh -o "NumberOfPasswordPrompts 0"' $lpath $user@$host:$rpath && break
			rsync -r -e 'ssh -o "NumberOfPasswordPrompts 0"' $lpath $user@$host:$rpath && break
			ret=$?
			if [ $ret == 12 ];then
				echo "Remote: yum -y install rsync"
				ssh $user@$host "yum -y install rsync"
			elif [ $ret == 11 ];then
				echo "Remote: mkdir -p $rpath"
				ssh $user@$host "mkdir -p $rpath"
			elif [ $ret == 255 ];then
				echo "Cp pub key to remote authorized_keys"
				cp_pub_key_to_remote
			else
				echo "rsync unknown issue ret=$ret"
			fi
		done
	done
done
